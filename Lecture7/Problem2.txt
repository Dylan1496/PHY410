For problem 2 we are asked to "clean up" the jitters in the power spectrum in the CO2 data.
If we use no window and set maxfreq to something very high (so that no smoothing of the data takes place), and we use a padding of 300.0, we get a rather noisy power and magnitude spectrum (seen in co2_original.png).
To smooth out the power spectrum, we can do the following - first, we can set the maxfreq variable to a reasonable value. The python code will then set the complex value of any data points in the Fourier plane to 0+0i. Secondly, we could use a Hann window so that any jitters decay very rapidly. Finally, we could set the value of the padding to something closer to the average of the data.
Setting the padding to a slightly higher value (like to 315.0 or 320.0, see co2_pad_315.png and co2_pad_320.png) helps to reduce the jitters in the power spectrum, but it did not eliminate them.
Next, using a Hann window with the padding set to 300 (see co2_hann.png) also helps remove the jitters, since the Hann window has a steeper drop off in the ringing than a box.
Combining padding and a window (co2_pad_plus_hann.png) makes the jitters slightly smaller, but not by that much. One thing to know with the window is that it changes the form of the data. To return to the data's original waveform would require undoing the window.
Lastly, what happens when we smooth the data? Looking at co2_smoothed, which used a padding of 315.0 and no window, we see that setting the maxfreq variable in the python code to 50 made the smoothed data very smooth, removing most of the wiggles present in the smoothed data. This is because the components with frequency higher than 50 in the Fourier plane were set to 0.
Note that near the end of the actual data and at the start of the padded data we see an overshoot in the smoothed data. This is a characteristic in the Fourier spectrum of a square wave. This phenomenon is known as the Gibbs phenomenon.
